import type { Metadata } from 'next';
import Header from '@/components/header';
import { ReactNode } from 'react';
import { notFound } from 'next/navigation';
import { NextIntlClientProvider } from 'next-intl';
import LocaleSwitcher from '@/components/locale-switcher';
import { routing } from '@/i18n/routing';

type Props = {
  children: ReactNode;
  params: Promise<{ locale: string }>;
};

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

//function to get the translations
async function getMessages(locale: string) {
  try {
    return (await import(`@/i18n/messages/${locale}.json`)).default;
  } catch (error) {
    console.error('Error loading messages:', error);
    notFound();
  }
}

//function to generate the routes for all the locales
export async function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

export default async function RootLayout({ children, params }: Props) {
  const { locale } = await params;
  const messages = await getMessages(locale);

  return (
    <html lang={locale}>
      <NextIntlClientProvider locale={locale as typeof routing.locales[number]} messages={messages}>
        <body className="bg-gray-100">
          <Header />
          <LocaleSwitcher />
          <div className="p-5">{children}</div>
        </body>
      </NextIntlClientProvider>
    </html>
  );
}
