worker_processes auto;  # 自动匹配 CPU 核心数

events {
    worker_connections 2048;  # 提高并发连接数
    multi_accept on;          # 同时接受多个连接
}

http {
    # 基础性能优化参数
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;  # 隐藏 Nginx 版本信息

    # MIME 类型配置
    include mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Gzip 压缩优化配置
    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 6;          # 提高压缩级别
    gzip_types text/plain text/css text/xml text/javascript
             application/json application/javascript application/xml
             font/ttf font/opentype font/x-woff image/svg+xml;
    gzip_vary on;
    gzip_proxied any;
    gzip_disable "msie6";

    server {
        listen 80;
        listen [::]:80;
        server_name yourdomain.com;  # 修改为实际域名

        # 强制 HTTPS 重定向（需先配置 SSL）
        return 301 https://$host$request_uri;

        # 单独配置访问日志
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name yourdomain.com;  # 修改为实际域名

        # SSL 配置（需替换实际证书路径）
        ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers on;

        # 根目录设置
        root /usr/share/nginx/html;

        # 安全响应头
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

        # 智能路径解析
        location / {
            try_files $uri $uri.html $uri/ @notfound;
        }

        # 根路径重定向
        location = / {
            return 307 /en;  # 临时重定向避免浏览器缓存
        }

        # 自定义错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /404.html { internal; }
        location = /50x.html { internal; }

        # 静态资源缓存策略
        location ~* \.(?:css|js|json|xml|txt|map)$ {
            expires 1h;
            add_header Cache-Control "public, max-age=3600, immutable";
        }

        location ~* \.(?:png|jpg|jpeg|gif|ico|cur|heic|webp|svg|avif)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
        }

        location ~* \.(?:woff2?|ttf|eot|otf)$ {
            expires 365d;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        # 禁止访问隐藏文件
        location ~ /\.(?!well-known).* {
            deny all;
            return 404;
        }

        # 特殊文件处理
        location = /robots.txt { allow all; }
        location = /favicon.ico { access_log off; }
    }
}
